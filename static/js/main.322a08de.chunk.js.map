{"version":3,"sources":["Components/EmployeeCard.js","Components/EmployeeSortFilter.js","Components/Header.js","App.js","index.js"],"names":["EmployeeCard","props","className","jsonData","map","employee","view","alt","name","first","last","src","picture","large","location","city","timezone","offset","href","email","phone","login","uuid","EmployeeSortFilter","useState","EmployeeState","setEmployeeState","useEffect","getRandomUserData","setView","a","console","log","axios","get","res","data","results","handleFilter","document","getElementById","checked","filtering","filter","gender","id","onChange","val","option","sorting","sort","person1","person2","alert","handleSort","target","value","type","for","ToggleButtonGroup","exclusive","event","nextView","size","ToggleButton","aria-label","Header","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.322a08de.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction EmployeeCard(props) {\n\n  return (\n\n    <div className=\"wrapper\">\n      \n        {props.jsonData.map(employee => (\n\n            <div className={props.view} key={employee.login.uuid}>\n\n              <img alt={employee.name.first + employee.name.last} src={employee.picture.large} />\n\n              <div className=\"tableNameWrap\">\n                <h2>{employee.name.first + \" \" + employee.name.last}</h2>\n              </div>\n\n              <div className=\"tableUlWrap\">\n                  <ul>\n                    <li>\n                      {employee.location.city + \" [\" + employee.location.timezone.offset + \"]\"}\n                    </li>\n                    <li>\n                    <a href={`mailto:${employee.email}`}>{employee.email}</a>  \n                    </li>\n                    <li>\n                      {employee.phone}\n                    </li>\n                  </ul>\n              </div>\n\n            </div>\n\n        ))}\n    </div>\n\n  );\n}\n\nexport default EmployeeCard;\n","\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport EmployeeCard from './EmployeeCard';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nfunction EmployeeSortFilter() {\n\n    const [EmployeeState, setEmployeeState] = useState([]);\n\n    useEffect(() => {\n        getRandomUserData()\n    }, []);\n\n    const [view, setView] = useState('card');\n\n    const handleViewChange = (event, nextView) => {\n        setView(nextView);\n      };\n\n    async function getRandomUserData() {\n        console.log(\"we are getting data now!\")\n        const res = await axios.get(\"https://randomuser.me/api/?results=9&seed=seed\");\n        console.log(res);\n        console.log(res.data.results);\n        setEmployeeState(res.data.results);\n    }\n\n    const handleSort = (option) => {\n        console.log(\"sorting is happening\");\n\n        if (option === \"default\") {\n            getRandomUserData();\n        } else if (option === \"firstAZ\") {\n            const sorting = EmployeeState.sort((person1, person2) => {\n                if (person1.name.first < person2.name.first) { \n                    return -1; \n                } else if (person1.name.first > person2.name.first) { \n                    return 1; \n                } else {\n                    return 0;\n                }\n            });\n            setEmployeeState([...sorting]);\n        } else if (option === \"firstZA\") {\n            const sorting = EmployeeState.sort((person1, person2) => {\n                if (person1.name.first > person2.name.first) { \n                    return -1; \n                } else if (person1.name.first < person2.name.first) { \n                    return 1; \n                } else {\n                    return 0;\n                }\n            });\n            setEmployeeState([...sorting]);\n        } else if (option === \"lastAZ\") {\n            const sorting = EmployeeState.sort((person1, person2) => {\n                if (person1.name.last < person2.name.last) { \n                    return -1; \n                } else if (person1.name.last > person2.name.last) { \n                    return 1; \n                } else {\n                    return 0;\n                }\n            });\n            setEmployeeState([...sorting]);\n        } else if (option === \"lastZA\") {\n            const sorting = EmployeeState.sort((person1, person2) => {\n                if (person1.name.last > person2.name.last) { \n                    return -1; \n                } else if (person1.name.last < person2.name.last) { \n                    return 1; \n                } else {\n                    return 0;\n                }\n            });\n            setEmployeeState([...sorting]);\n        } else {\n            alert(\"Oops! Something went wrong! Please try sorting again!\");\n        }\n        \n    }\n\n    async function handleFilter() {\n        console.log(\"filtering is happening\");\n\n        const res = await axios.get(\"https://randomuser.me/api/?results=9&seed=seed\");\n\n        if (document.getElementById(\"female\").checked) {\n            let filtering = res.data.results.filter((employee) => {\n                return employee.gender === \"female\";\n            });\n            setEmployeeState([...filtering]);\n            console.log([[...filtering]]);\n\n        } else if (document.getElementById(\"male\").checked) {\n            let filtering = res.data.results.filter((employee) => {\n                return employee.gender === \"male\";\n            });\n            setEmployeeState([...filtering]);\n            console.log([[...filtering]]);\n\n        } else {\n            getRandomUserData();\n        }\n        \n    }\n\n    return (\n\n        <div>\n\n            <form>\n                <div className=\"Inputs\">\n                    <select id=\"sort\" name=\"sort\" onChange={(val) => handleSort(val.target.value)}>\n                        <option value=\"default\">Default Sort</option>\n                        <option value=\"firstAZ\">First Name A-Z</option>\n                        <option value=\"firstZA\">First Name Z-A</option>\n                        <option value=\"lastAZ\">Last Name A-Z</option>\n                        <option value=\"lastZA\">Last Name Z-A</option>\n                    </select>\n                </div>\n\n                <div className=\"Inputs\">\n\n                    <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\"\n                    onChange={handleFilter}></input>\n\n                    <label for=\"female\">Women Only</label>\n\n                    <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\"\n                    onChange={handleFilter}></input>\n\n                    <label for=\"other\">Men Only</label>\n\n                    <input type=\"radio\" id=\"all\" name=\"gender\" value=\"all\"\n                    onChange={handleFilter}></input>\n\n                    <label for=\"other\">All</label>\n                </div>\n\n                <div className=\"Inputs\">\n                    \n                    <ToggleButtonGroup value={view} exclusive onChange={handleViewChange} size=\"small\">\n                        <ToggleButton value=\"table\" aria-label=\"table\">\n                            <ViewListIcon />\n                        </ToggleButton>\n                        <ToggleButton value=\"card\" aria-label=\"car\">\n                            <ViewModuleIcon />\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n\n                </div>\n\n            </form>\n\n            <EmployeeCard\n                jsonData={EmployeeState}\n                view={view}\n            />\n        </div>\n    )\n}\n\nexport default EmployeeSortFilter;","import React from 'react';\n\n\nexport default function Header() {\n\n\n  return (\n    <div className=\"header\">\n        <h1>Employee Directory</h1>\n    </div>\n  )\n}","import React from 'react';\nimport EmployeeSortFilter from './Components/EmployeeSortFilter';\nimport Header from './Components/Header';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <EmployeeSortFilter />\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}